name: Build & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: 
      - opened
      - synchronize
      - reopened
    branches:
      - "*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: npm ci
      # gitに日本語ファイル名に対応させる。
      - run: git config --global core.quotepath false

      - run: sudo apt-get install -y nkf

      - run: npm run test
      - run: npm run build-csv
        continue-on-error: true
        id: build-step

      - name: Comment to PR if build fails
        id: comment-build-error
        if: steps.build-step.outcome == 'failure'
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = context.issue.number;
            const message = `## エラー：Excel の変換に失敗しました\n アップロードした Excel ファイルにデータが含まれていないか、壊れている可能性があります。再度ご確認ください。`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message
            });
 
      - name: Exit with failure
        if: steps.build-step.outcome == 'failure'
        run: exit 1

      - run: npm run build-location-data
      - run: npm run build-standard-data
      - run: npm run build-api
      - run: npm run build-data-updates

      - name: Prepare README update and branch
        id: prepare-readme-update
        if: github.event_name == 'pull_request'
        run: |
          npm run build-readme
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          if ! git diff --quiet README.md; then

            NEW_BRANCH_NAME="update-readme-${GITHUB_SHA}"
            git checkout -b $NEW_BRANCH_NAME

            git add README.md
            git commit -m "Update README"
            git push --set-upstream origin $NEW_BRANCH_NAME --force-with-lease

            echo "NEW_BRANCH_NAME=$NEW_BRANCH_NAME" >> $GITHUB_ENV
            exit 0
          fi
          exit 1

      - name: Create Pull Request using GitHub Script
        if: env.NEW_BRANCH_NAME
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pr = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Update README',
              head: process.env.NEW_BRANCH_NAME,
              base: 'main',
              body: 'Updated README.md'
            };
            github.rest.pulls.create(pr);

      - uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          name: build
          path: build

  comment-diff:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write

    steps:
    - name: Checkout main branch into main_branch_content directory
      uses: actions/checkout@v2
      with:
        ref: main
        path: main_branch_content/

    - name: install nkf
      run: |
        sudo apt-get install -y nkf

    - name: Build CSV for main branch
      run: |
        cd main_branch_content/
        npm ci
        npm run build-csv

    - name: Checkout current branch into current_branch_content directory
      uses: actions/checkout@v2
      with:
        path: current_branch_content/

    - name: Build CSV for current branch
      run: |
        cd current_branch_content/
        npm ci
        npm run build-csv

    - name: Add comment to show CSV diff
      run: |
        chmod +x ./current_branch_content/src/csvdiff.sh
        ./current_branch_content/src/csvdiff.sh
      env:
        GH_TOKEN: ${{ github.token }}
        REPO: "${{ github.repository_owner }}/${{ github.event.repository.name }}"

  deploy:
    if: github.ref == 'refs/heads/main'

    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true

    needs:
      - build

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # environment is not compatible with AWS credentials
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  # backup:
  #   if: github.ref == 'refs/heads/main'

  #   runs-on: ubuntu-latest
  #   # Allow write on id-token so we can use it to authenticate to AWS
  #   permissions:
  #     contents: read
  #     id-token: write

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set current datetime as env variable
  #       env:
  #         TZ: "Asia/Tokyo"
  #       run: echo "CURRENT_DATETIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         role-to-assume: arn:aws:iam::584344484091:role/takamatsu_github_s3_backup
  #         aws-region: ap-northeast-1

  #     - name: Backup data folder to S3 bucket
  #       run: |
  #         aws s3 sync data s3://takamatsu-city-opendata-backup-ap-northeast-1/${{ env.CURRENT_DATETIME }}
