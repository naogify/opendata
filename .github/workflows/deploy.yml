name: Build & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: 
      - opened
      - synchronize
      - reopened
    branches:
      - "*"
  workflow_dispatch:

jobs:

  prepare:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.skip_check.outputs.skip }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2  # 直前のコミットを取得する為に必要

    - name: Check last commit message
      id: last_commit
      run: echo "message=$(git log --format=%B -n 1 ${{ github.event.before }})" >> $GITHUB_ENV

    - name: Check only README.md is changed
      id: files
      run: echo "list=$(git diff --name-only ${{ github.sha }} ${{ github.event.before }})" >> $GITHUB_ENV

    - name: Determine if job should be skipped
      id: skip_check
      run: |
        message="${{ env.message }}"
        files="${{ env.list }}"
        echo "skip=false" >> $GITHUB_ENV
        if [[ "$message" == "Update README By GitHub Actions" && "$files" == "README.md" ]]; then
          echo "skip=true" >> $GITHUB_ENV
        fi
        
    - name: Set output
      run: echo "skip=${{ env.skip }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write

    needs: prepare

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GEOLONIA_BOT_PAT_TOKEN }}
        
      - run: npm ci
      # gitに日本語ファイル名に対応させる。
      - run: git config --global core.quotepath false

      - run: sudo apt-get install -y nkf

      - run: npm run build-config-json
      - run: npm run test
      - run: npm run build-csv
        continue-on-error: true
        id: build-step

      - name: Comment to PR if build fails
        id: comment-build-error
        if: steps.build-step.outcome == 'failure'
        run: ./src/errorFiles.sh
        env:
          GH_TOKEN: ${{ github.token }}
          OWNER: "${{ github.repository_owner }}"
          REPO: "${{ github.event.repository.name }}"
          BRANCH: "${{ github.event.pull_request.head.ref }}"

      - run: npm run build-location-data
      - run: npm run build-standard-data
      - run: npm run build-api
      - run: npm run build-data-updates

      - run: echo "${{ needs.prepare.outputs }}"

      - name: Update README with add-and-commit action
        uses: EndBug/add-and-commit@v7
        if: needs.prepare.outputs.skip == 'false' && github.event_name == 'pull_request'
        with:
          message: "Update README By GitHub Actions"
          add: "./README.md"
          push: true
          author_name: "${GITHUB_ACTOR}"
          author_email: "${GITHUB_ACTOR}@users.noreply.github.com"

      - uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          name: build
          path: build

  comment-diff:
    if: needs.prepare.outputs.skip == 'false' && github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write

    needs: prepare

    steps:
    - name: Checkout main branch into main_branch_content directory
      uses: actions/checkout@v2
      with:
        ref: main
        path: main_branch_content/

    - name: install nkf
      run: |
        sudo apt-get install -y nkf

    - name: Build CSV for main branch
      run: |
        cd main_branch_content/
        npm ci
        npm run build-csv

    - name: Checkout current branch into current_branch_content directory
      uses: actions/checkout@v2
      with:
        path: current_branch_content/

    - name: Build CSV for current branch
      run: |
        cd current_branch_content/
        npm ci
        npm run build-csv

    - name: Add comment to show CSV diff
      run: ./current_branch_content/src/csvdiff.sh
      env:
        GH_TOKEN: ${{ github.token }}
        REPO: "${{ github.repository_owner }}/${{ github.event.repository.name }}"

  deploy:
    if: github.ref == 'refs/heads/main'

    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true

    needs:
      - build

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # environment is not compatible with AWS credentials
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  # backup:
  #   if: github.ref == 'refs/heads/main'

  #   runs-on: ubuntu-latest
  #   # Allow write on id-token so we can use it to authenticate to AWS
  #   permissions:
  #     contents: read
  #     id-token: write

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set current datetime as env variable
  #       env:
  #         TZ: "Asia/Tokyo"
  #       run: echo "CURRENT_DATETIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         role-to-assume: arn:aws:iam::584344484091:role/takamatsu_github_s3_backup
  #         aws-region: ap-northeast-1

  #     - name: Backup data folder to S3 bucket
  #       run: |
  #         aws s3 sync data s3://takamatsu-city-opendata-backup-ap-northeast-1/${{ env.CURRENT_DATETIME }}